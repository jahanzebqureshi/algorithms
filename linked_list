class Node:
    '''
    An object for storing a single node of a Linked List.
    Models two attributes - data and the link to the next node in the List'''
    data = None
    next_node = None
    
    def __init__(self, data):
        self.data = data
        
    def __repr__(self):
        return "<Node data: %s>" % self.data

class LinkedList:
    '''
    Singly Linked List '''
    def __init__(self):
        self.head = None
    
    def is_empty(self):
        return self.head == None
        
        '''Returns the number of nodes in the list, takes O(n) time'''
    def size(self):
        current = self.head
        count = 0
        
        while current:
            count += 1
            current = current.next_node
            
        return count
        
        ''' Adds new Node containing data at head of the list, takes O(1) time'''
    def add (self, data):
        new_node = Node(data)
        new_node.next_node = self.head
        self.head = new_node
